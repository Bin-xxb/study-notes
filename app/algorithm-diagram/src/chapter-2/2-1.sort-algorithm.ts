/**
 * @为什么使用链表
 *
 * 简单理解
 *
 * 在申请内存空间时,数组元素是紧靠在一起的,如果超出当初申请的长度那么需要重新分配
 * 内存地址,如果采用预留又有内存溢出的风险.
 *
 * 使用链表则可以解决这个问题,因为链表当前元素保留了下一个元素的内存地址
 *
 * 访问
 * 当需要同时访问所有元素是链表的效率很高
 * 但是需要随机读取时,数组的效率更高
 *
 *
 * 在中间插入时
 * 使用链表很简单,只需要修改上一个元素的指向地址
 * 使用数组则要将插入项后面全部向后移动,如果内存不够的话还有可能将数据整个复制到别的地方去
 *
 *
 * 删除同理
 * 使用链表只需修改一个元素的指向地址
 * 使用数组则需要在插入项后面的元素全部向前移动
 */
